name: "Build Rust"
on: workflow_call

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: x86_64-apple-darwin
            build: |
              pnpm --filter "@oomm/transformer" build:rs --target x86_64-apple-darwin
          - host: windows-latest
            build: |
              pnpm --filter "@oomm/transformer" build:rs --target x86_64-pc-windows-msvc
            target: x86_64-pc-windows-msvc
          - host: windows-latest
            build: |
              pnpm --filter "@oomm/transformer" build:rs --target i686-pc-windows-msvc
            target: i686-pc-windows-msvc
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian
            build: |
              pnpm --filter "@oomm/transformer" build:rs --target x86_64-unknown-linux-gnu
          - host: ubuntu-latest
            target: x86_64-unknown-linux-musl
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine
            build: |
              pnpm --filter "@oomm/transformer" build:rs --target x86_64-unknown-linux-musl
          - host: macos-latest
            target: aarch64-apple-darwin
            build: |
              pnpm --filter "@oomm/transformer" build:rs --target aarch64-apple-darwin
          - host: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            build: |
              corepack prepare pnpm@9.1.4 --activate
              pnpm --filter "@oomm/transformer" build:rs --target aarch64-unknown-linux-gnu
          - host: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
            setup: |
              sudo apt-get update
              sudo apt-get install gcc-arm-linux-gnueabihf -y
            build: |
              pnpm --filter "@oomm/transformer" build:rs --target armv7-unknown-linux-gnueabihf
          - host: ubuntu-latest
            target: armv7-unknown-linux-musleabihf
            build: |
              pnpm --filter "@oomm/transformer" build:rs --target armv7-unknown-linux-musleabihf
          - host: ubuntu-latest
            target: aarch64-linux-android
            build: |
              pnpm --filter "@oomm/transformer" build:rs --target aarch64-linux-android
          - host: ubuntu-latest
            target: armv7-linux-androideabi
            build: |
              pnpm --filter "@oomm/transformer" build:rs --target armv7-linux-androideabi
          - host: ubuntu-latest
            target: aarch64-unknown-linux-musl
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine
            build: |
              set -e &&
              rustup target add aarch64-unknown-linux-musl &&
              pnpm --filter "@oomm/transformer" build:rs --target aarch64-unknown-linux-musl
          - host: windows-latest
            target: aarch64-pc-windows-msvc
            build: |
              pnpm --filter "@oomm/transformer" build:rs --target aarch64-pc-windows-msvc
    name: stable - ${{ matrix.settings.target }} - node@20
    runs-on: ${{ matrix.settings.host }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.1.4
          run_install: false
      - name: Setup node
        uses: actions/setup-node@v4
        if: ${{ !matrix.settings.docker }}
        with:
          node-version: 20
          cache: pnpm
      # - name: Install
      #   uses: dtolnay/rust-toolchain@stable
      #   if: ${{ !matrix.settings.docker }}
      #   with:
      #     toolchain: nightly-2024-10-07
      #     targets: ${{ matrix.settings.target }}
      - name: Install rustup
        run: rustup target add ${{ matrix.settings.target }}
        if: ${{ matrix.settings.target }}
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            .cargo-cache
            target/
          key: ${{ github.sha }}-${{ matrix.settings.target }}-cargo-${{ matrix.settings.host }}
      - uses: goto-bus-stop/setup-zig@v2
        if: ${{ matrix.settings.target == 'armv7-unknown-linux-gnueabihf' || matrix.settings.target == 'armv7-unknown-linux-musleabihf' || matrix.settings.target == 'aarch64-unknown-linux-gnu' }}
        with:
          version: 0.13.0
      - name: Setup toolchain
        run: ${{ matrix.settings.setup }}
        if: ${{ matrix.settings.setup }}
        shell: bash
      - name: Setup node x86
        if: matrix.settings.target == 'i686-pc-windows-msvc'
        run: pnpm config set supportedArchitectures.cpu "ia32"
        shell: bash
      - name: Install dependencies
        run: pnpm install
      - name: Setup node x86
        uses: actions/setup-node@v4
        if: matrix.settings.target == 'i686-pc-windows-msvc'
        with:
          node-version: 20
          cache: pnpm
          architecture: x86
      - name: Build in docker
        uses: addnab/docker-run-action@v3
        if: ${{ matrix.settings.docker }}
        with:
          image: ${{ matrix.settings.docker }}
          options: "--user 0:0 -v ${{ github.workspace }}/.cargo-cache/git/db:/usr/local/cargo/git/db -v ${{ github.workspace }}/.cargo/registry/cache:/usr/local/cargo/registry/cache -v ${{ github.workspace }}/.cargo/registry/index:/usr/local/cargo/registry/index -v ${{ github.workspace }}:/build -w /build"
          run: ${{ matrix.settings.build }}
      - name: Build
        uses: nick-fields/retry@v3
        if: ${{ !matrix.settings.docker }}
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: ${{ matrix.settings.build }}
          shell: bash
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: transformer-${{ matrix.settings.target }}
          path: ./packages/transformer/binding/*.node
          if-no-files-found: error
  # build-freebsd:
  #   runs-on: macos-13
  #   name: Build FreeBSD
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Build
  #       id: build
  #       uses: cross-platform-actions/action@v0.24.0
  #       env:
  #         DEBUG: napi:*
  #         RUSTUP_IO_THREADS: 1
  #       with:
  #         operating_system: freebsd
  #         version: "13.2"
  #         memory: 8G
  #         cpu_count: 3
  #         environment_variables: DEBUG RUSTUP_IO_THREADS
  #         shell: bash
  #         run: |
  #           sudo pkg install -y -f curl node libnghttp2 npm
  #           sudo npm install -g pnpm --ignore-scripts
  #           curl https://sh.rustup.rs -sSf --output rustup.sh
  #           sh rustup.sh -y --profile minimal --default-toolchain nightly-2024-10-07
  #           source "$HOME/.cargo/env"
  #           echo "~~~~ rustc --version ~~~~"
  #           rustc --version
  #           echo "~~~~ node -v ~~~~"
  #           node -v
  #           echo "~~~~ pnpm --version ~~~~"
  #           pnpm --version
  #           pwd
  #           ls -lah
  #           whoami
  #           env
  #           freebsd-version
  #           pnpm install
  #           pnpm --filter "@oomm/transformer" build:rs --target aarch64-unknown-linux-gnu
  #           rm -rf node_modules
  #           rm -rf target
  #           rm -rf .pnpm/cache
  #     - name: Upload artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: bindings-freebsd
  #         path: ./packages/transformer/binding/*.node
  #         if-no-files-found: error
